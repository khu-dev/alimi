plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "io.freefair.lombok" version "5.3.0"
}

group = 'com.khumu'
version = '0.0.0'
sourceCompatibility = '11'


repositories {
    mavenCentral()
}

dependencies {
    // 편리한 기능을 위한 lombok
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation("com.slack.api:slack-api-client:1.12.1")

    // gson
    implementation('com.google.code.gson:gson:2.8.0')

    implementation 'mysql:mysql-connector-java:8.0.25'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // logger
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'

    // fcm push
    implementation 'com.google.firebase:firebase-admin:7.1.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            //'org.bouncycastle:bcprov-jdk15on:1.60',
             'io.jsonwebtoken:jjwt-jackson:0.11.2' // for jackson
//            'io.jsonwebtoken:jjwt-gson:0.11.2' // for gson

    // dto, entitiy mapper
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    implementation 'io.awspring.cloud:spring-cloud-starter-aws-messaging:2.3.0'
}


compileJava{
    options.compilerArgs += [
            /**
             * -Amapstruct.*은 mapstruct processor configurations
             */
            '-Amapstruct.defaultComponentModel=spring', // Spring의 dependency injection 이용
            '-Amapstruct.verbose=false' // 컴파일 로그를 더 보고 싶으면 켜
    ]
}

test {
    useJUnitPlatform()
}